import requests
import pandas as pd
import time
import ta

# ========== –ù–ê–°–¢–†–û–ô–ö–ò ==========
TOKEN = "–í–ê–®_TG_TOKEN"
CHAT_ID = "–í–ê–®_CHAT_ID"

COIN_ID = "bitcoin"  # –ü—Ä–∏–º–µ—Ä: 'bitcoin', 'ethereum', 'solana'
INTERVAL = 'hourly'  # 'daily', 'hourly'
LIMIT = 100          # –ö–æ–ª-–≤–æ —Ç–æ—á–µ–∫ (–¥–æ 90 –¥–ª—è hourly, –¥–æ 365 –¥–ª—è daily)
RSI_PERIOD = 14

# ========== –§–£–ù–ö–¶–ò–ò ==========

def send_signal(message):
    url = f"https://api.telegram.org/bot{TOKEN}/sendMessage"
    data = {"chat_id": CHAT_ID, "text": message}
    requests.post(url, data=data)

def fetch_ohlc(coin_id, interval, limit):
    url = f"https://api.coingecko.com/api/v3/coins/{coin_id}/market_chart"
    params = {
        "vs_currency": "usd",
        "days": "7",
        "interval": interval
    }
    try:
        r = requests.get(url, params=params)
        data = r.json()
        prices = data.get("prices", [])[-limit:]
        df = pd.DataFrame(prices, columns=["timestamp", "price"])
        df["price"] = df["price"].astype(float)
        return df
    except Exception as e:
        send_signal(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return pd.DataFrame()

def calculate_rsi(series, period):
    try:
        rsi = ta.momentum.RSIIndicator(close=series, window=period)
        return rsi.rsi()
    except Exception as e:
        send_signal(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á—ë—Ç–µ RSI: {e}")
        return pd.Series()

# ========== –û–°–ù–û–í–ù–û–ô –¶–ò–ö–õ ==========

def run_bot():
    df = fetch_ohlc(COIN_ID, INTERVAL, LIMIT)
    
    if df.empty or len(df) < RSI_PERIOD:
        send_signal("‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
        return

    df["rsi"] = calculate_rsi(df["price"], RSI_PERIOD)
    
    try:
        last_price = df["price"].iloc[-1]
        last_rsi = df["rsi"].iloc[-1]

        if last_rsi < 30:
            send_signal(f"üìâ –°–∏–≥–Ω–∞–ª –Ω–∞ –ø–æ–∫—É–ø–∫—É {COIN_ID.upper()}\n–¶–µ–Ω–∞: ${last_price:.2f}\nRSI: {last_rsi:.2f}")
        elif last_rsi > 70:
            send_signal(f"üìà –°–∏–≥–Ω–∞–ª –Ω–∞ –ø—Ä–æ–¥–∞–∂—É {COIN_ID.upper()}\n–¶–µ–Ω–∞: ${last_price:.2f}\nRSI: {last_rsi:.2f}")
        else:
            send_signal(f"‚ÑπÔ∏è {COIN_ID.upper()} –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ\n–¶–µ–Ω–∞: ${last_price:.2f}\nRSI: {last_rsi:.2f}")

    except IndexError:
        send_signal("‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ: –¥–∞–Ω–Ω—ã–µ –ø–æ RSI –∏–ª–∏ —Ü–µ–Ω–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")

# ========== –ó–ê–ü–£–°–ö ==========
if __name__ == "__main__":
    run_bot()

